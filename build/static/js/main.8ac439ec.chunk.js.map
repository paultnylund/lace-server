{"version":3,"sources":["api.js","functions/objDetect.js","App.js","serviceWorker.js","index.js"],"names":["streamAndDetect","image","data","treshold","console","log","JSON","stringify","fetch","concat","method","headers","Content-Type","auth","body","then","response","json","catch","error","ObjDetect","video","_this","this","Object","classCallCheck","grabImage","document","canvas","createElement","context","getContext","drawImage","VIDOE_REF","videoWidth","videoHeight","UPLOAD_WITH","toBlob","API","drawBoundingBoxes","ctx","videoRef","DATA_SOURCE","dataSource","uploadWidth","MIRROR","mirror","THRESHOLD","scoreThreshold","App","props","possibleConstructorReturn","getPrototypeOf","call","grabCanvasImage","OBJ_DETECT","renderCameraInput","state","support","mediaStream","VIDEO","srcObject","react_default","a","renderBoundingBoxes","objDetect","className","MEDIA_STREAM","_this2","navigator","mediaDevices","getUserMedia","isPlaying","gotMetadata","dataMirror","dataUploadWidth","dataThreshold","addEventListener","audio","width","min","ideal","max","height","stream","setState","removeEventListener","_this3","ref","controls","muted","playsInline","autoPlay","_this4","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ac439ec.chunk.js","sourcesContent":["const APIURL = 'https://api.lace.guide';\n\nconst AUTHCODE = \"afjCEsnkK3bJ@#$dz%3JRTMtWJIAZs@Cc$Me*%!KkXpNR9G1MS$2xtfn5!FfGsy!caK5#kVd4l%ghDyFWp2jAVGaPYdAaerCDW9Snu0G#IOXVBIb*uCx5gt7O0&c1&tUg#G7Nd5nUHTQM7d32nzRlRa3D&WqWN9y&Bqe3SCv7C*mS4LFV5kM37wFbgDgvjELZI%mvx*v&a!w0Ie3XWy$Gdu6NJJUJ#eN^&Q!pCUVyWkZ9B7py8p^a*92r80iOrX3v@BSREqS^MEkx3$#2kUtP%#X5Oq!L*Ovg9Fg5$6xR0oX\";\n\nexport const streamAndDetect = (image) => {\n    const data = {\n        image:      image,\n        treshold:   0.5\n    };\n\n    console.log(data);\n    console.log(data.image);\n    console.log(JSON.stringify(data));\n\n    return fetch(`${APIURL}/stream/streamAndDetect`, {\n        method: 'POST',\n        headers: {\n            'Content-Type':     'application/json',\n            auth:               AUTHCODE,\n        },\n        body: JSON.stringify(data)\n    }).then((response) => {\n        const json = response.json();\n        return (json);\n    }).catch((error) => {\n        console.log(error);\n    });\n};\n","import * as API from '../api.js';\n\nclass ObjDetect {\n    constructor(video) {\n        console.log(video);\n        if (video) {\n            this.VIDOE_REF = video.videoRef;\n            this.DATA_SOURCE = video.dataSource;\n            this.UPLOAD_WITH = video.uploadWidth || 640;\n            this.MIRROR = video.mirror || false;\n            this.THRESHOLD = video.scoreThreshold || 0.5;\n        }\n    }\n\n    grabImage = (document) => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n\n        // context.drawImage(this.VIDOE_REF, 0, 0);\n        context.drawImage(this.VIDOE_REF, 0, 0, this.VIDOE_REF.videoWidth, this.VIDOE_REF.videoHeight,\n            0, 0, this.UPLOAD_WITH, this.UPLOAD_WITH * (this.VIDOE_REF.videoHeight / this.VIDOE_REF.videoWidth));\n        canvas.toBlob(API.streamAndDetect, 'image/jpeg');\n\n        console.log(context);\n    };\n\n    drawBoundingBoxes = (document) => {\n        const canvas = document.createElement('canvas');\n        // document.body.appendChild(canvas);\n        const ctx = canvas.getContext('2d');\n        console.log(ctx);\n    };\n\n};\n\nexport default ObjDetect;\n","import React, { Component } from 'react';\n\nimport * as API from './api.js';\nimport ObjDetect from './functions/objDetect.js';\n\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsupport: null,\n\t\t\tmediaStream: null,\n\t\t};\n\n\t\tthis.MEDIA_STREAM = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst support = !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n\n\t\tlet isPlaying = false;\n\t\tlet gotMetadata = false;\n\n\t\tthis.OBJ_DETECT = new ObjDetect({\n\t\t\tvideoRef:\t\t\t\t\tthis.VIDEO,\n\t\t\tdataMirror:\t\t\t\tfalse,\n\t\t\tdataUploadWidth:\t1280,\n\t\t\tdataThreshold:\t\t0.5,\n\t\t});\n\n\t\tthis.VIDEO.addEventListener('playing', () => {\n\t\t\tisPlaying = true;\n\n\t\t\tif (gotMetadata) {\n\t\t\t\tthis.OBJ_DETECT.grabImage(document);\n\t\t\t}\n\t\t});\n\n\t\tthis.VIDEO.addEventListener('loadedmetadata', () => {\n\t\t\tgotMetadata = true;\n\n\t\t\tif (isPlaying) {\n\t\t\t\tthis.OBJ_DETECT.grabImage(document);\n\t\t\t}\n\t\t});\n\n\t\tif (support) {\n\t\t\tnavigator.mediaDevices.getUserMedia({\n\t\t\t\taudio: false,\n\t\t\t\tvideo: {\n\t\t\t\t\twidth: { min: 640, ideal: 1280, max: 1920 },\n\t\t\t\t\theight: { min: 480, ideal: 720, max: 1080 },\n\t\t\t\t},\n\t\t\t}).then((stream) => {\n\t\t\t\tconsole.log(stream);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tsupport: true,\n\t\t\t\t\tmediaStream: stream,\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tsupport: 'getUserMedia() IS NOT supported by this browser',\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.VIDEO.removeEventListener('playing', this.grabCanvasImage);\n\t}\n\n\tgrabCanvasImage = () => {\n\t\tthis.OBJ_DETECT.grabImage(document);\n\t};\n\n\trenderCameraInput = () => {\n\t\tif (this.state.support && this.state.mediaStream) {\n\t\t\t\tthis.VIDEO.srcObject = this.state.mediaStream;\n\t\t\t\t// this.grabCanvasImage();\n\t\t}\n\n\t\treturn (\n\t\t\t<h1>{this.state.support}</h1>\n\t\t)\n\t};\n\n\trenderOld() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.renderCameraInput()}\n\t\t\t\t<video\n\t\t\t\t\tref={(ref) => this.VIDEO = ref}\n\t\t\t\t\tcontrols\n\t\t\t\t\tmuted\n\t\t\t\t\tplaysInline\n\t\t\t\t\tautoPlay\n\t\t\t\t\theight=\"608\"\n\t\t\t\t\twidth=\"608\"\n\t\t\t\t\tclassName=\"video-container\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderBoundingBoxes = (objDetect) => {\n\t\tif (this.state.renderBoundingBoxes) {\n\t\t\treturn (\n\t\t\t\t<div className=\"canvas-container\">\n\t\t\t\t\t{objDetect.drawBoundingBoxes()}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (null);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"video-container\">\n\t\t\t\t\t{this.renderCameraInput()}\n\t\t\t\t\t<video\n\t\t\t\t\t\tref={(ref) => this.VIDEO = ref}\n\t\t\t\t\t\tid=\"video\"\n\t\t\t\t\t\tcontrols\n\t\t\t\t\t\tmuted\n\t\t\t\t\t\tplaysInline\n\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\theight=\"608\"\n\t\t\t\t\t\twidth=\"608\"\n\t\t\t\t\t\tclassName=\"video\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/* {this.renderBoundingBoxes(this.OBJ_DETECT)} */}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}